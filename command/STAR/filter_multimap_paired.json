{"https://moirai2.github.io/schema/daemon/input":"$bam","https://moirai2.github.io/schema/daemon/bash":["multimap1=$tmpdir/multimap1.fq.gz","unmapped1=$tmpdir/unmapped1.fq.gz","multimap2=$tmpdir/multimap2.fq.gz","unmapped2=$tmpdir/unmapped2.fq.gz","filter.pl $bam $multimap1 $unmapped1 $multimap2 $unmapped2"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"filter.pl","https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","my $input=$ARGV[0];","my $multimap1=$ARGV[1];","my $unmapped1=$ARGV[2];","my $multimap2=$ARGV[3];","my $unmapped2=$ARGV[4];","my $multimapcount=0;","my $unmappedcount=0;","open(IN,\"samtools view -f 0x4 $input|\");","open(MULTI1,\"|gzip>$multimap1\");","open(MULTI2,\"|gzip>$multimap2\");","open(FILTERED1,\"|gzip>$unmapped1\");","open(FILTERED2,\"|gzip>$unmapped2\");","while(<IN>){","if(/^@/){next;}","chomp;s/\r//g;","my ($qname,$flag,$rname,$pos,$mapq,$cigar,$rnext,$pnexxt,$tlen,$seq,$qual,@others)=split(/\\t/);","my $read2=($flag&128)>0;","my $multi=0;","foreach my $other(@others){if($other=~/uT:A:3/){$multi=1;}}","if($multi){if($read2){print MULTI2 \"\\@$qname\\n$seq\\n+\\n$qual\\n\";}else{print MULTI1 \"\\@$qname\\n$seq\\n+\\n$qual\\n\";$multimapcount++;}}","else{if($read2){print FILTERED2 \"\\@$qname\\n$seq\\n+\\n$qual\\n\";}else{print FILTERED1 \"\\@$qname\\n$seq\\n+\\n$qual\\n\";$unmappedcount++;}}","}","close(IN);","close(MULTI1);","close(MULTI2);","close(FILTERED1);","close(FILTERED2);"]},"https://moirai2.github.io/schema/daemon/output":["$unmapped1","$unmapped2","$multimap1","$multimap2"]}
