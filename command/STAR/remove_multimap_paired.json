{"https://moirai2.github.io/schema/daemon/input":"$input","https://moirai2.github.io/schema/daemon/bash":["unmap1=\"$tmpdir/unmap1.fq.gz\"","unmap2=\"$tmpdir/unmap2.fq.gz\"","multicount=`filter.pl $input $unmap1 $unmap2`"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"filter.pl","https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","my $input=$ARGV[0];","my $filtered1=$ARGV[1];","my $filtered2=$ARGV[2];","my $multimapcount=0;","open(IN,\"samtools view $input |\");","open(FILTERED1,\"|gzip>$filtered1\");","open(FILTERED2,\"|gzip>$filtered2\");","while(<IN>){","if(/^@/){next;}","chomp;s/\r//g;","my ($qname,$flag,$rname,$pos,$mapq,$cigar,$rnext,$pnexxt,$tlen,$seq,$qual,@others)=split(/\\t/);","my $read2=($flag&128)>0;","my $multi=0;","foreach my $other(@others){if($other=~/uT:A:3/){$multi=1;}}","if($multi){if($read2){$multimapcount++;}}","else{if($read2){print FILTERED2 \"\\@$qname\\n$seq\\n+\\n$qual\\n\";}else{print FILTERED1 \"\\@$qname\\n$seq\\n+\\n$qual\\n\";}}","}","close(IN);","close(FILTERED1);","close(FILTERED2);","print \"$multimapcount\\n\";"]},"https://moirai2.github.io/schema/daemon/output":["$unmap1","$unmap2","$multicount"]}
