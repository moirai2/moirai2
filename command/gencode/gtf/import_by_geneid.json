{"https://moirai2.github.io/schema/daemon/input":["$geneid","$gtf"],"https://moirai2.github.io/schema/daemon/bash":["output=$workdir/output.txt","import=$workdir/import.txt","import.pl $gtf $geneid $output $import"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"import.pl","https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","use strict 'vars';","use File::Basename;","use Getopt::Std;","if(scalar(@ARGV)!=2){exit();}","my $file=shift(@ARGV);","my $geneid=shift(@ARGV);","my $name=basename($file,\".gz\");","my $reader;","if($file=~/\\.gz(ip)?$/){open($reader,\"gzip -cd $file|\");}","elsif($file=~/\\.bz(ip)?2$/){open($reader,\"bzip2 -cd $file|\");}","else{open($reader,$file);}","my $linecount=0;","while(<$reader>){","if(/^#/){$linecount++;next;}","if(!/gene_name \"$geneid\"/){$linecount++;next;}","chomp;","my ($seqname,$source,$feature,$start,$end,$score,$strand,$frame,$attribute)=split(/\\t/);","my $hash={};","foreach my $attribute(split(/;\\s*/,$attribute)){","chomp($attribute);","if($attribute eq \"\"){next;}","my ($key,$val)=split(/ /,$attribute,2);","if($val=~/^\"(.+)\"$/){$val=$1;}","elsif($val=~/^\\'(.+)\\'$/){$val=$1;}","$hash->{$key}=$val;","}","my $node=\"$name#$linecount\";","print \"$geneid\\tgencode $feature\\t$node\\n\";","print \"$node\\tseqname\\t$seqname\\n\";","print \"$node\\tsource\\t$source\\n\";","print \"$node\\tfeature\\t$feature\\n\";","print \"$node\\tstart\\t$start\\n\";","print \"$node\\tend\\t$end\\n\";","print \"$node\\tscore\\t$score\\n\";","print \"$node\\tstrand\\t$strand\\n\";","print \"$node\\tframe\\t$frame\\n\";","foreach my $key(sort{$a cmp $b}keys(%{$hash})){my $val=$hash->{$key};print \"$node\\t$key\\t$val\\n\";}","$linecount++;","}","close($reader);"]},"https://moirai2.github.io/schema/daemon/output":["$output","$import"]}
