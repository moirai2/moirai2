{"https://moirai2.github.io/schema/daemon/bash":["output=$tmpdir/output.txt","compare_bams.pl $input1 $input2 $id $output"],"https://moirai2.github.io/schema/daemon/input":["$input1","$input2","$id"],"https://moirai2.github.io/schema/daemon/output":["$output"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"compare_bams.pl","https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","use strict 'vars';","use FileHandle;","use File::Temp qw/tempfile tempdir/;","my $input1=$ARGV[0];","my $input2=$ARGV[1];","my $id=$ARGV[2];","my $output=$ARGV[3];","if(!defined($id)){$id=\"larvae\"}","if(!defined($output)){$output=\"-\"}","my $list1=listMapUnmap($input1);","my $list2=listMapUnmap($input2);","my $map_map=0;","my $map_unmap=0;","my $unmap_map=0;","my $unmap_unmap=0;","my $reader1=openFile($list1);","my $reader2=openFile($list2);","my ($id1,$map1)=read_next($reader1);","my ($id2,$map2)=read_next($reader2);","open(OUT,\"|gzip -c>$output\");","while(defined($id1)&&defined($id2)){","  my $cmp=($id1 cmp $id2);","  if($cmp==0){","    compare($map1,$map2);","    print OUT \"$id1\\t$map1\\t$map2\\n\";","    ($id1,$map1)=read_next($reader1);","    ($id2,$map2)=read_next($reader2);","  }elsif($cmp<0){","    compare($map1,0);","    print OUT \"$id1\\t$map1\\t0\\n\";","    ($id1,$map1)=read_next($reader1);","  }else{","    compare(0,$map2);","    print OUT \"$id2\\t0\\t$map2\\n\";","    ($id2,$map2)=read_next($reader2);","  }","}","while(defined($id1)){compare($map1,0);print OUT \"$id1\\t$map1\\t0\\n\";($id1,$map1)=read_next($reader1);}","while(defined($id2)){compare(0,$map2);print OUT \"$id2\\t0\\t$map2\\n\";($id2,$map2)=read_next($reader2);}","close($reader1);","close($reader2);","print \"$id->map_map->$map_map\\n\";","print \"$id->map_unmap->$map_unmap\\n\";","print \"$id->unmap_map->$unmap_map\\n\";","print \"$id->unmap_unmap->$unmap_unmap\\n\";","############################## compare ##############################","sub compare{","  my $map1=shift();","  my $map2=shift();","  if($map1>0){","    if($map2>0){$map_map++;}","    else{$map_unmap++;}","  }else{","    if($map2>0){$unmap_map++;}","    else{$unmap_unmap++;}","  }","}","############################## read_next ##############################","sub read_next{","  my $reader=shift();","  if(eof($reader)){return;}","  my $line=<$reader>;","  chomp($line);","  my @tokens=split(/\\t/,$line);","  return @tokens;","}","############################## openFile ##############################","sub openFile{","\tmy $path=shift();","\tif($path=~/^(.+\\@.+)\\:(.+)$/){","\t\tif($path=~/\\.gz(ip)?$/){return IO::File->new(\"ssh $1 'gzip -cd $2'|\");}","\t\telsif($path=~/\\.bz(ip)?2$/){return IO::File->new(\"ssh $1 'bzip2 -cd $2'|\");}","\t\telsif($path=~/\\.bam$/){return IO::File->new(\"ssh $1 'samtools view $2'|\");}","\t\telse{return IO::File->new(\"ssh $1 'cat $2'|\");}","\t}else{","\t\tif($path=~/\\.gz(ip)?$/){return IO::File->new(\"gzip -cd $path|\");}","\t\telsif($path=~/\\.bz(ip)?2$/){return IO::File->new(\"bzip2 -cd $path|\");}","\t\telsif($path=~/\\.bam$/){return IO::File->new(\"samtools view $path|\");}","\t\telse{return IO::File->new($path);}","\t}","}","############################## listMapUnmap ##############################","sub listMapUnmap{","  my $bamFile=shift();","  my $reader=openFile($bamFile);","  my ($writer,$listFile)=tempfile(\"listXXXXXXXXXX\",DIR=>\"/tmp/\",SUFFIX=>\".txt\",UNLINK=>1);","  while(<$reader>){","    chomp;","    my @token=split(/\\t/);","    my $mapped=(($token[1]&4)==0)?1:0;","    print $writer $token[0].\"\\t$mapped\\n\";","  }","  close($writer);","  my ($writer,$sortFile)=tempfile(\"sortXXXXXXXXXX\",DIR=>\"/tmp/\",SUFFIX=>\".txt\",UNLINK=>1);","  close($writer);","  system(\"sort -u $listFile > $sortFile\");","  unlink($listFile);","  return $sortFile;","}"]}}