{"https://moirai2.github.io/schema/daemon/input":["$input",{"$cutoff":"10"},{"$flag":"0x104"}],"https://moirai2.github.io/schema/daemon/bash":["output=\"$workdir/output.ctss.bed\"","bam_to_ctssbed.sh -q $cutoff -f $flag $input > $output"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"bam_to_ctssbed.sh","https://moirai2.github.io/schema/daemon/script/code":["#!/bin/bash","","if [ $# -eq 0 ]","then"," echo \"Usage is : $0 -q <mapping quality cutoff> -f <flag> <map1.bam> <map2.bam> ...\""," exit 1;","fi","QCUT=","FLAG=","while getopts f:q: opt","do"," case ${opt} in"," q) QCUT=${OPTARG};;"," f) FLAG=${OPTARG};;"," *) usage;;"," esac","done","if [ \"${QCUT}\" = \"\" ]; then QCUT=10; fi","if [ \"${FLAG}\" = \"\" ]; then FLAG=\"0x104\"; fi","for var in \"$@\"","do"," if [[ $var =~ bam$ ]]; then"," foo=$var"," file=${foo##*/}"," base=${file%%.*}"," #echo working on: $base"," TMPFILE=\"/tmp/$(basename $0).$RANDOM.txt\""," samtools view  -F $FLAG -u -q $QCUT -b $var |  bamToBed -i stdin > $TMPFILE"," cat  ${TMPFILE} | awk 'BEGIN{OFS=\"\\t\"}{if($6==\"+\"){print $1,$2,$5}}' | sort -k1,1 -k2,2n | groupBy -i stdin -g 1,2 -c 3 -o count | awk -v x=\"$base\" 'BEGIN{OFS=\"\\t\"}{print $1,$2,$2+1,  x  ,$3,\"+\"}'"," cat  ${TMPFILE} | awk 'BEGIN{OFS=\"\\t\"}{if($6==\"-\"){print $1,$3,$5}}' | sort -k1,1 -k2,2n | groupBy -i stdin -g 1,2 -c 3 -o count | awk -v x=\"$base\" 'BEGIN{OFS=\"\\t\"}{print $1,$2-1,$2, x  ,$3,\"-\"}'"," rm $TMPFILE"," fi","done"]},"https://moirai2.github.io/schema/daemon/output":"$output"}
