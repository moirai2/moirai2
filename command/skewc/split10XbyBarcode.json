{"https://moirai2.github.io/schema/daemon/input":["$input","$barcode"],"https://moirai2.github.io/schema/daemon/bash":["outdir=\"$tmpdir/out\"","split10XbyBarcode.pl -o $outdir $input $barcode","rm $workdir/$stdoutfile"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"split10XbyBarcode.pl","https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","use strict 'vars';","use File::Basename;","use Getopt::Std;","use IO::File;","use vars qw($opt_l $opt_o $opt_r $opt_t);","getopts('l:o:r:t:');","if(scalar(@ARGV)==0){print STDERR \"perl split10XbyBarcode.pl -o OUTDIR BAM BARCODE\\n\";exit(0);}","my $bam=$ARGV[0];","my $barcode=$ARGV[1];","my $length=(defined($opt_l))?$opt_l:3;","my $outdir=(defined($opt_o))?$opt_o:\"split\";","my $regexp=(defined($opt_r))?$opt_r:\"CB:Z:(\\\\S+)\";","my $tmpdir=(defined($opt_t))?$opt_t:\"tmp\";","mkdir($outdir);","mkdir($tmpdir);","chmod(0777,$outdir);","chmod(0777,$tmpdir);","print(\"#1 Reading barcode file...\\n\");","my $barcodes={};","if($barcode=~/\\.gz(ip)?$/){open(IN,\"gzip -cd $barcode|\");}","else{open(IN,$barcode);}","while(<IN>){chomp;$barcodes->{$_}++;}","close(IN);","print(\"#2 Reading header lines...\\n\");","my $basename=basename($bam,\".bam\");","my @headers=();","open(IN,\"samtools view -H $bam|\");","while(<IN>){push(@headers,$_);}","close(IN);","print(\"#3 Filtering barcodes...\\n\");","my $writers={};","my @splits=();","open(IN,\"samtools view $bam|\");","while(<IN>){","\tmy $line=$_;","\tmy $barcode=\"others\";","\tif(/$regexp/){","\t\tif(!exists($barcodes->{$1})){next;}","\t\t$barcode=substr($1,0,$length);","\t}else{next;}","\tif(!exists($writers->{$barcode})){","\t\tmy $split=\"$tmpdir/$basename.$barcode.sam\";","\t\tpush(@splits,$split);","\t\tmy $writer=IO::File->new(\">$split\");","\t\t$writers->{$barcode}=$writer;","\t}","\tmy $writer=$writers->{$barcode};","\tprint $writer $line;","}","close(IN);","print(\"#4 Splitting by barcodes...\\n\");","my @bams=();","foreach my $writer(values(%{$writers})){close($writer);}","my $count=1;","my $total=scalar(@splits);","print \"Completed 0/$total\";","foreach my $split(sort{$a cmp $b}@splits){","\tmy $writers={};","\tmy @outputs=();","\topen(IN,$split);","\twhile(<IN>){","\t\tmy $barcode=\"others\";","\t\tif(/$regexp/){$barcode=$1;}","\t\telse{next;}","\t\tif(!exists($writers->{$barcode})){","\t\t\tmy $output=\"$outdir/$basename.$barcode.sam\";","\t\t\tpush(@outputs,$output);","\t\t\tmy $writer=IO::File->new(\">$output\");","\t\t\t$writers->{$barcode}=$writer;","\t\t\tforeach my $header(@headers){print $writer $header;}","\t\t}","\t\tmy $writer=$writers->{$barcode};","\t\tprint $writer $_;","\t}","\tclose(IN);","\tforeach my $writer(values(%{$writers})){close($writer);}","\tforeach my $output(@outputs){","\t\tmy $basename=basename($output,\".sam\");","\t\tmy $bam=\"$outdir/$basename.bam\";","\t\tpush(@bams,$bam);","\t\tmy $command=\"samtools view -bSo $bam $output 2>/dev/null\";","\t\tsystem($command);","\t\tunlink($output);","\t}","\tunlink($split);","\tprint \"\\rCompleted $count/$total\";","\t$count++;","}","rmdir($tmpdir);","print(\"\\n# Done...\\n\");"]},"https://moirai2.github.io/schema/daemon/output":"$outdir"}