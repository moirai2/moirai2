{"https://moirai2.github.io/schema/daemon/input":["$studyid","$title","$description","$database"],"https://moirai2.github.io/schema/daemon/bash":["output=$workdir/output.txt","perl sqlite3.pl -d $database query \"\\$studyid->Run->\\$runid,\\$runid->LibraryStrategy->ATAC-seq,\\$runid->LibraryLayout->PAIRED,\\$runid->Sample->\\$sample,\\$runid->ScientificName->\\$organism,\\$runid->read1->\\$read1,\\$runid->read2->\\$read2,\\$organism->atacseq_pipeline_genome_tsv->\\$tsv\" | create.pl \"$title\" \"$description\" > $output"],"https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/name":"create.pl","https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","my $title=shift(@ARGV);","my $description=shift(@ARGV);","my $hash={};","my $tsvs={};","my @runs=();","while(<STDIN>){","chomp;","my ($subject,$predicate,$object)=split(/\t/);","if($predicate eq \"Run\"){push(@runs,$object);next;}","if($predicate eq \"atacseq_pipeline_genome_tsv\"){$tsvs->{$subject}=$object;next;}","if(!exists($hash->{$subject})){$hash->{$subject}={}}","if(!exists($hash->{$subject}->{$predicate})){$hash->{$subject}->{$predicate}=$object;}","elsif(ref($hash->{$subject}->{$predicate})eq\"ARRAY\"){push(@{$hash->{$subject}->{$predicate}},$object);}","else{$hash->{$subject}->{$predicate}=[$hash->{$subject}->{$predicate},$object];}","}","my $samples={};","my $organism;","my $strategy;","my $layout;","my $query=\"{\"atac.pipeline_type\":\"#pipelinetype#\",\"atac.genome_tsv\":\"#genometsv#\",\"atac.fastqs\":#atacfastqs#,\"atac.paired_end\":#pairedend#,\"atac.multimapping\":4,\"atac.auto_detect_adapter\":true,\"atac.smooth_win\":73,\"atac.enable_idr\":true,\"atac.idr_thresh\":0.05,\"atac.enable_xcor\":true,\"atac.title\":\"#title#\",\"atac.description\":\"#description#\",\"atac.trim_adapter.cpu\":1,\"atac.trim_adapter.mem_mb\":4000,\"atac.trim_adapter.time_hr\":1,\"atac.bowtie2_cpu\":1,\"atac.bowtie2_mem_mb\":4000,\"atac.bowtie2_time_hr\":1,\"atac.filter_cpu\":1,\"atac.filter_mem_mb\":4000,\"atac.filter_time_hr\":1,\"atac.macs2_mem_mb\":4000,\"atac.macs2_time_hr\":1,\"atac.ataqc.mem_mb\":5000,\"atac.ataqc.mem_java_mb\":4000,\"atac.ataqc.time_hr\":1}\";","foreach my $run(@runs){","my $sample=$hash->{$run}->{\"Sample\"};","if(!exists($samples->{$sample})){$samples->{$sample}={};}","$samples->{$sample}->{$run}={};","if(exists($hash->{$run}->{\"read1\"})){$samples->{$sample}->{$run}->{\"read1\"}=$hash->{$run}->{\"read1\"};}","if(exists($hash->{$run}->{\"read2\"})){$samples->{$sample}->{$run}->{\"read2\"}=$hash->{$run}->{\"read2\"};}","my $o=$hash->{$run}->{\"ScientificName\"};","if(!defined($organism)){$organism=$o;}","elsif($organism ne $o){print STDERR \"ERROR: Organism doesn't match\";}","my $s=$hash->{$run}->{\"LibraryStrategy\"};","if(!defined($strategy)){$strategy=$s;}","elsif($organism ne $o){print STDERR \"ERROR: LibraryStrategy doesn't match\";}","my $l=$hash->{$run}->{\"LibraryLayout\"};","if(!defined($layout)){$layout=$l;}","elsif($organism ne $o){print STDERR \"ERROR: LibraryLayout doesn't match\";}","}","if(!defined($title)){$title=$strategy;}","if($strategy eq \"ATAC-seq\"){$strategy=\"atac\";}","elsif($strategy eq \"DNase-seq\"){$strategy=\"dnase\";}","else{$strategy=\"atac\";}","if($layout eq \"PAIRED\"){$layout=\"true\";}","elsif($layout eq \"SINGLE\"){$layout=\"false\";}","else{$layout=\"true\";}","if(!defined($description)){$description=\"kundajelab/atac-seq-pipeline (https://github.com/kundajelab/atac-seq-pipeline)\";}","$organism=$tsvs->{$organism};","$inputs=\"[\";","my $sampleindex=0;","foreach my $sample(keys(%{$samples})){","if($sampleindex>0){$inputs.=\",\";}","$inputs.=\"[\";","my $runindex=0;","foreach my $run(keys(%{$samples->{$sample}})){","if($runindex>0){$inputs.=\",\";}","$inputs.=\"[\"\".$samples->{$sample}->{$run}->{\"read1\"}.\"\"\";","if(exists($samples->{$sample}->{$run}->{\"read2\"})){$inputs.=\",\"\".$samples->{$sample}->{$run}->{\"read2\"}.\"\"\";}","$inputs.=\"]\";","$runindex++;","}","$inputs.=\"]\";","$sampleindex++;","}","$inputs.=\"]\";","$query=~s/#pipelinetype#/$strategy/;","$query=~s/#pairedend#/$layout/;","$query=~s/#atacfastqs#/$inputs/;","$query=~s/#genometsv#/$organism/;","$query=~s/#title#/$title/;","$query=~s/#description#/$description/;","print \"$query\\n\";"]},"https://moirai2.github.io/schema/daemon/output":"$output"}
