{"https://moirai2.github.io/schema/daemon/input":["$directory","$genome","$protein_coding_gtf","$lincRNA_gtf"],"https://moirai2.github.io/schema/daemon/bash":["totalcounts=\"$directory/tmp/totalcounts.txt\"","totalcounts_protein_coding=\"$directory/tmp/totalcounts.protein_coding.txt\"","totalcounts_lincRNA=\"$directory/tmp/totalcounts.lincRNA.txt\"","protein_coding=$workdir/proteincoding","gzip -cd $protein_coding_gtf>$protein_coding","lincRNA=$workdir/lincRNA","gzip -cd $lincRNA_gtf>$lincRNA","numexpressedgene.sh $directory $genome tt.sh $protein_coding","numexpressedproteincoding.sh $directory $genome tt.sh $protein_coding $lincRNA","rm $protein_coding","rm $lincRNA"],"https://moirai2.github.io/schema/daemon/script":[{"https://moirai2.github.io/schema/daemon/script/name":"numexpressedgene.sh","https://moirai2.github.io/schema/daemon/script/code":["#!/bin/sh","# calc num of expressed gene from expression table (*.table)                   #","# output format: dataset, sampleid, number of expressed gene or totalcounts    #","# $dir/tmp/totalcounts.txt, $dir/tmp/numexpgene.$type.$threshold.txt           #","# e.g.) GSE75748        SRR2977654      1776191                                #","","####################################","dir=$1","genome=$2","tt=$3","indir=$dir/$genome","outdir=$dir/tmp","","####################################","mkdir -p $outdir","fn1(){","  type=count","#  for f in $indir/${g}_*/$type.table","  for f in $indir/*/$type.table","  do","    d=$(dirname $f|sed 's|.*/||'|sed 's/'$genome'_//')","    cat $f |head -1 | cut -f2-| $tt /dev/stdin|awk '{print \"'$d'\\t\"$1}' > $outdir/header.tmp","    cat $f |sed -n '2,$p'|awk '{for(i=2;i<=NF;i++){tmp[i]+=$i}}END{for(i=2;i<=NF;i++){print tmp[i]}}'|","    paste $outdir/header.tmp /dev/stdin","  done > $outdir/totalcounts.txt","  rm $outdir/header.tmp","}","fn1","","fn(){","  type=$1","  threshold=$2","#  for f in $indir/${g}_*/$type.table","  for f in $indir/*/$type.table","  do","    d=$(dirname $f|sed 's|.*/||'|sed 's/'$genome'_//')","    cat $f |head -1 | cut -f2-| $tt /dev/stdin|awk '{print \"'$d'\\t\"$1}' > $outdir/header.tmp","    cat $f |sed -n '2,$p'|awk 'BEGIN{for(i=2;i<=NF;i++){tmp[i]=0}}{for(i=2;i<=NF;i++){if($i>='$threshold'){tmp[i]+=1}}}END{for(i=2;i<=NF;i++){print tmp[i]}}'|","    paste $outdir/header.tmp /dev/stdin","  done > $outdir/numexpgene.$type.$threshold.txt","","  rm $outdir/header.tmp","}","","fn count 10","fn fpkm 1","fn tpm 1"]},{"https://moirai2.github.io/schema/daemon/script/name":"numexpressedproteincoding.sh","https://moirai2.github.io/schema/daemon/script/code":["#!/bin/sh","# calc num of expressed gene from expression table (*.table)                            #","# output format: dataset, sampleid, number of expressed gene or totalcounts             #","# $dir/tmp/totalcounts.genetype.txt, $dir/tmp/numexpgene.$genetype.$type.$threshold.txt #","# e.g.) GSE75748        SRR2977654      1776191                                         #","","####################################","dir=$1","genome=$2","tt=$3","protein_coding_gtf=$4","lincRNA_gtf=$5","indir=$dir/$genome","outdir=$dir/tmp","","####################################","allfn(){","genetype=$1","if [ $(echo $genetype|grep protein_coding) ];then","ref=$protein_coding_gtf","elif [ $(echo $genetype|grep lincRNA) ];then","ref=$lincRNA_gtf","fi","","  fn1(){","    type=count","#    for f in $indir/${g}_*/$type.table","    for f in $indir/*/$type.table","    do","      d=$(dirname $f|sed 's|.*/||'|sed 's/'$genome'_//')","      cat $f |head -1 | cut -f2-| $tt /dev/stdin|awk '{print \"'$d'\\t\"$1}' > $outdir/header.tmp","      cat $f |sed -n '2,$p'| sort -k1,1|join -t$'\\t' /dev/stdin $ref |awk '{for(i=2;i<=NF;i++){tmp[i]+=$i}}END{for(i=2;i<=NF;i++){print tmp[i]}}'|","      paste $outdir/header.tmp /dev/stdin","    done > $outdir/totalcounts.$genetype.txt","    rm $outdir/header.tmp","  }","  fn1","","  fn(){","    type=$1","    threshold=$2","#    for f in $indir/${g}_*/$type.table","    for f in $indir/*/$type.table","    do","      d=$(dirname $f|sed 's|.*/||'|sed 's/'$genome'_//')","      cat $f |head -1 | cut -f2-| $tt /dev/stdin|awk '{print \"'$d'\\t\"$1}' > $outdir/header.tmp","      cat $f |sed -n '2,$p'|sort -k1,1|join -t$'\\t' /dev/stdin $ref |","      awk 'BEGIN{for(i=2;i<=NF;i++){tmp[i]=0}}{for(i=2;i<=NF;i++){if($i>='$threshold'){tmp[i]+=1}}}END{for(i=2;i<=NF;i++){print tmp[i]}}'|","      paste $outdir/header.tmp /dev/stdin","    done > $outdir/numexpgene.$genetype.$type.$threshold.txt","    rm $outdir/header.tmp","  }","  fn count 10","  fn fpkm 1","  fn tpm 1","}","allfn protein_coding","allfn lincRNA"]},{"https://moirai2.github.io/schema/daemon/script/name":"tt.sh","https://moirai2.github.io/schema/daemon/script/code":["#!/bin/sh","# transpose table","cat $1|","awk -F\"\\t\" '{","  for(i=1;i<=NF;i++){","    tmp[NR,i]=$i","  }","}END{","  tmp1=\"\"","  for(j=1;j<=NF;j++){","    for(i=1;i<=NR;i++){","      tmp1=tmp1\"\\t\"tmp[i,j]","    }","  print tmp1;tmp1=\"\"","}","}' | sed 's/^\\t//g'"]}],"https://moirai2.github.io/schema/daemon/output":["$totalcounts","$totalcounts_protein_coding","$totalcounts_lincRNA"]}
